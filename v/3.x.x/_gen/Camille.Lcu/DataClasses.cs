﻿
// This file is automatically generated.
// Do not directly edit.
// Generated on 2021-10-24T18:42:20.279Z

// Version 1.0.0

using System.Collections.Generic;
using System.Linq;


#if USE_NEWTONSOFT
using JsonPropertyAttribute = Newtonsoft.Json.JsonPropertyAttribute;
using JsonExtensionDataAttribute = Newtonsoft.Json.JsonExtensionDataAttribute;
#elif USE_SYSTEXTJSON
using JsonPropertyAttribute = System.Text.Json.Serialization.JsonPropertyNameAttribute;
using JsonExtensionDataAttribute = System.Text.Json.Serialization.JsonExtensionDataAttribute;
#else
#error One of USE_NEWTONSOFT or USE_SYSTEXTJSON must be set.
#endif

// ReSharper disable InconsistentNaming

namespace Camille.Lcu.LolLogin
{
    /// <summary>
    /// LoginSession data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class LoginSession
    {

#nullable disable
        public LoginSession() {}
#nullable restore

        [JsonProperty("accountId")]
        public long? AccountId { get; set; }
        [JsonProperty("connected")]
        public bool? Connected { get; set; }
        [JsonProperty("error")]
        public LoginError? Error { get; set; }
        [JsonProperty("gasToken")]
        public IDictionary<string, Dictionary<string, object>>? GasToken { get; set; }
        [JsonProperty("idToken")]
        public string? IdToken { get; set; }
        [JsonProperty("isInLoginQueue")]
        public bool? IsInLoginQueue { get; set; }
        [JsonProperty("isNewPlayer")]
        public bool? IsNewPlayer { get; set; }
        [JsonProperty("puuid")]
        public string? Puuid { get; set; }
        [JsonProperty("state")]
        public LoginSessionStates? State { get; set; }
        [JsonProperty("summonerId")]
        public long? SummonerId { get; set; }
        [JsonProperty("userAuthToken")]
        public string? UserAuthToken { get; set; }
        [JsonProperty("username")]
        public string? Username { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "LoginSession("
                + "AccountId: " + AccountId + ", "
                + "Connected: " + Connected + ", "
                + "Error: " + Error + ", "
                + "GasToken: " + GasToken + ", "
                + "IdToken: " + IdToken + ", "
                + "IsInLoginQueue: " + IsInLoginQueue + ", "
                + "IsNewPlayer: " + IsNewPlayer + ", "
                + "Puuid: " + Puuid + ", "
                + "State: " + State + ", "
                + "SummonerId: " + SummonerId + ", "
                + "UserAuthToken: " + UserAuthToken + ", "
                + "Username: " + Username + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolLogin
{
    /// <summary>
    /// UsernameAndPassword data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class UsernameAndPassword
    {

#nullable disable
        public UsernameAndPassword() {}
#nullable restore

        [JsonProperty("password")]
        public string? Password { get; set; }
        [JsonProperty("username")]
        public string? Username { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "UsernameAndPassword("
                + "Password: " + Password + ", "
                + "Username: " + Username + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.Global
{
    /// <summary>
    /// RegionLocale data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class RegionLocale
    {

#nullable disable
        public RegionLocale() {}
#nullable restore

        [JsonProperty("locale")]
        public string? Locale { get; set; }
        [JsonProperty("region")]
        public string? Region { get; set; }
        [JsonProperty("webLanguage")]
        public string? WebLanguage { get; set; }
        [JsonProperty("webRegion")]
        public string? WebRegion { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "RegionLocale("
                + "Locale: " + Locale + ", "
                + "Region: " + Region + ", "
                + "WebLanguage: " + WebLanguage + ", "
                + "WebRegion: " + WebRegion + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolSummoner
{
    /// <summary>
    /// Summoner data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class Summoner
    {

#nullable disable
        public Summoner() {}
#nullable restore

        [JsonProperty("accountId")]
        public long? AccountId { get; set; }
        [JsonProperty("displayName")]
        public string? DisplayName { get; set; }
        [JsonProperty("internalName")]
        public string? InternalName { get; set; }
        [JsonProperty("nameChangeFlag")]
        public bool? NameChangeFlag { get; set; }
        [JsonProperty("percentCompleteForNextLevel")]
        public int? PercentCompleteForNextLevel { get; set; }
        [JsonProperty("profileIconId")]
        public int? ProfileIconId { get; set; }
        [JsonProperty("puuid")]
        public string? Puuid { get; set; }
        [JsonProperty("rerollPoints")]
        public SummonerRerollPoints? RerollPoints { get; set; }
        [JsonProperty("summonerId")]
        public long? SummonerId { get; set; }
        [JsonProperty("summonerLevel")]
        public int? SummonerLevel { get; set; }
        [JsonProperty("unnamed")]
        public bool? Unnamed { get; set; }
        [JsonProperty("xpSinceLastLevel")]
        public long? XpSinceLastLevel { get; set; }
        [JsonProperty("xpUntilNextLevel")]
        public long? XpUntilNextLevel { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "Summoner("
                + "AccountId: " + AccountId + ", "
                + "DisplayName: " + DisplayName + ", "
                + "InternalName: " + InternalName + ", "
                + "NameChangeFlag: " + NameChangeFlag + ", "
                + "PercentCompleteForNextLevel: " + PercentCompleteForNextLevel + ", "
                + "ProfileIconId: " + ProfileIconId + ", "
                + "Puuid: " + Puuid + ", "
                + "RerollPoints: " + RerollPoints + ", "
                + "SummonerId: " + SummonerId + ", "
                + "SummonerLevel: " + SummonerLevel + ", "
                + "Unnamed: " + Unnamed + ", "
                + "XpSinceLastLevel: " + XpSinceLastLevel + ", "
                + "XpUntilNextLevel: " + XpUntilNextLevel + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolSummoner
{
    /// <summary>
    /// AutoFillQueue data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class AutoFillQueue
    {

#nullable disable
        public AutoFillQueue() {}
#nullable restore

        [JsonProperty("autoFillEligible")]
        public bool? AutoFillEligible { get; set; }
        [JsonProperty("autoFillProtectedForPromos")]
        public bool? AutoFillProtectedForPromos { get; set; }
        [JsonProperty("autoFillProtectedForStreaking")]
        public bool? AutoFillProtectedForStreaking { get; set; }
        [JsonProperty("queueId")]
        public int? QueueId { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "AutoFillQueue("
                + "AutoFillEligible: " + AutoFillEligible + ", "
                + "AutoFillProtectedForPromos: " + AutoFillProtectedForPromos + ", "
                + "AutoFillProtectedForStreaking: " + AutoFillProtectedForStreaking + ", "
                + "QueueId: " + QueueId + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolSummoner
{
    /// <summary>
    /// SummonerIcon data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class SummonerIcon
    {

#nullable disable
        public SummonerIcon() {}
#nullable restore

        [JsonProperty("inventoryToken")]
        public string? InventoryToken { get; set; }
        [JsonProperty("profileIconId")]
        public int? ProfileIconId { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "SummonerIcon("
                + "InventoryToken: " + InventoryToken + ", "
                + "ProfileIconId: " + ProfileIconId + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolSummoner
{
    /// <summary>
    /// SummonerRerollPoints data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class SummonerRerollPoints
    {

#nullable disable
        public SummonerRerollPoints() {}
#nullable restore

        [JsonProperty("currentPoints")]
        public int? CurrentPoints { get; set; }
        [JsonProperty("maxRolls")]
        public int? MaxRolls { get; set; }
        [JsonProperty("numberOfRolls")]
        public int? NumberOfRolls { get; set; }
        [JsonProperty("pointsCostToRoll")]
        public int? PointsCostToRoll { get; set; }
        [JsonProperty("pointsToReroll")]
        public int? PointsToReroll { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "SummonerRerollPoints("
                + "CurrentPoints: " + CurrentPoints + ", "
                + "MaxRolls: " + MaxRolls + ", "
                + "NumberOfRolls: " + NumberOfRolls + ", "
                + "PointsCostToRoll: " + PointsCostToRoll + ", "
                + "PointsToReroll: " + PointsToReroll + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolSummoner
{
    /// <summary>
    /// SummonerProfileUpdate data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class SummonerProfileUpdate
    {

#nullable disable
        public SummonerProfileUpdate() {}
#nullable restore

        [JsonProperty("inventory")]
        public string? Inventory { get; set; }
        [JsonProperty("key")]
        public string? Key { get; set; }
        [JsonProperty("value")]
        public IDictionary<string, Dictionary<string, object>>? Value { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "SummonerProfileUpdate("
                + "Inventory: " + Inventory + ", "
                + "Key: " + Key + ", "
                + "Value: " + Value + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolSummoner
{
    /// <summary>
    /// SummonerRequestedName data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class SummonerRequestedName
    {

#nullable disable
        public SummonerRequestedName() {}
#nullable restore

        [JsonProperty("name")]
        public string? Name { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "SummonerRequestedName("
                + "Name: " + Name + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// LeagueLadderInfo data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class LeagueLadderInfo
    {

#nullable disable
        public LeagueLadderInfo() {}
#nullable restore

        [JsonProperty("divisions")]
        public LeagueDivisionInfo[]? Divisions { get; set; }
        [JsonProperty("nextApexUpdateMillis")]
        public long? NextApexUpdateMillis { get; set; }
        [JsonProperty("provisionalGameThreshold")]
        public int? ProvisionalGameThreshold { get; set; }
        [JsonProperty("queueType")]
        public Camille.Enums.QueueType? QueueType { get; set; }
        [JsonProperty("requestedRankedEntry")]
        public LeagueStanding? RequestedRankedEntry { get; set; }
        [JsonProperty("tier")]
        public Camille.Enums.Tier? Tier { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "LeagueLadderInfo("
                + "Divisions: " + Divisions + ", "
                + "NextApexUpdateMillis: " + NextApexUpdateMillis + ", "
                + "ProvisionalGameThreshold: " + ProvisionalGameThreshold + ", "
                + "QueueType: " + QueueType + ", "
                + "RequestedRankedEntry: " + RequestedRankedEntry + ", "
                + "Tier: " + Tier + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// RankedStats data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class RankedStats
    {

#nullable disable
        public RankedStats() {}
#nullable restore

        [JsonProperty("earnedRegaliaRewardIds")]
        public string[]? EarnedRegaliaRewardIds { get; set; }
        [JsonProperty("highestPreviousSeasonAchievedDivision")]
        public Camille.Enums.Division? HighestPreviousSeasonAchievedDivision { get; set; }
        [JsonProperty("highestPreviousSeasonAchievedTier")]
        public Camille.Enums.Tier? HighestPreviousSeasonAchievedTier { get; set; }
        [JsonProperty("highestPreviousSeasonEndDivision")]
        public Camille.Enums.Division? HighestPreviousSeasonEndDivision { get; set; }
        [JsonProperty("highestPreviousSeasonEndTier")]
        public Camille.Enums.Tier? HighestPreviousSeasonEndTier { get; set; }
        [JsonProperty("highestRankedEntry")]
        public RankedQueueStats? HighestRankedEntry { get; set; }
        [JsonProperty("highestRankedEntrySR")]
        public RankedQueueStats? HighestRankedEntrySR { get; set; }
        [JsonProperty("queueMap")]
        public IDictionary<string, RankedQueueStats>? QueueMap { get; set; }
        [JsonProperty("queues")]
        public RankedQueueStats[]? Queues { get; set; }
        [JsonProperty("rankedRegaliaLevel")]
        public int? RankedRegaliaLevel { get; set; }
        [JsonProperty("seasons")]
        public IDictionary<string, Season>? Seasons { get; set; }
        [JsonProperty("splitsProgress")]
        public IDictionary<string, int>? SplitsProgress { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "RankedStats("
                + "EarnedRegaliaRewardIds: " + EarnedRegaliaRewardIds + ", "
                + "HighestPreviousSeasonAchievedDivision: " + HighestPreviousSeasonAchievedDivision + ", "
                + "HighestPreviousSeasonAchievedTier: " + HighestPreviousSeasonAchievedTier + ", "
                + "HighestPreviousSeasonEndDivision: " + HighestPreviousSeasonEndDivision + ", "
                + "HighestPreviousSeasonEndTier: " + HighestPreviousSeasonEndTier + ", "
                + "HighestRankedEntry: " + HighestRankedEntry + ", "
                + "HighestRankedEntrySR: " + HighestRankedEntrySR + ", "
                + "QueueMap: " + QueueMap + ", "
                + "Queues: " + Queues + ", "
                + "RankedRegaliaLevel: " + RankedRegaliaLevel + ", "
                + "Seasons: " + Seasons + ", "
                + "SplitsProgress: " + SplitsProgress + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// ParticipantTiers data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ParticipantTiers
    {

#nullable disable
        public ParticipantTiers() {}
#nullable restore

        [JsonProperty("achievedTiers")]
        public AchievedTier[]? AchievedTiers { get; set; }
        [JsonProperty("summonerId")]
        public long? SummonerId { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ParticipantTiers("
                + "AchievedTiers: " + AchievedTiers + ", "
                + "SummonerId: " + SummonerId + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectSession data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ChampSelectSession
    {

#nullable disable
        public ChampSelectSession() {}
#nullable restore

        [JsonProperty("actions")]
        public IDictionary<string, Dictionary<string, object>>[]? Actions { get; set; }
        [JsonProperty("allowBattleBoost")]
        public bool? AllowBattleBoost { get; set; }
        [JsonProperty("allowDuplicatePicks")]
        public bool? AllowDuplicatePicks { get; set; }
        [JsonProperty("allowLockedEvents")]
        public bool? AllowLockedEvents { get; set; }
        [JsonProperty("allowRerolling")]
        public bool? AllowRerolling { get; set; }
        [JsonProperty("allowSkinSelection")]
        public bool? AllowSkinSelection { get; set; }
        [JsonProperty("bans")]
        public ChampSelectBannedChampions? Bans { get; set; }
        [JsonProperty("benchChampionIds")]
        public int[]? BenchChampionIds { get; set; }
        [JsonProperty("benchEnabled")]
        public bool? BenchEnabled { get; set; }
        [JsonProperty("boostableSkinCount")]
        public int? BoostableSkinCount { get; set; }
        [JsonProperty("chatDetails")]
        public ChampSelectChatRoomDetails? ChatDetails { get; set; }
        [JsonProperty("counter")]
        public long? Counter { get; set; }
        [JsonProperty("entitledFeatureState")]
        public EntitledFeatureState? EntitledFeatureState { get; set; }
        [JsonProperty("gameId")]
        public long? GameId { get; set; }
        [JsonProperty("hasSimultaneousBans")]
        public bool? HasSimultaneousBans { get; set; }
        [JsonProperty("hasSimultaneousPicks")]
        public bool? HasSimultaneousPicks { get; set; }
        [JsonProperty("isCustomGame")]
        public bool? IsCustomGame { get; set; }
        [JsonProperty("isSpectating")]
        public bool? IsSpectating { get; set; }
        [JsonProperty("localPlayerCellId")]
        public long? LocalPlayerCellId { get; set; }
        [JsonProperty("lockedEventIndex")]
        public int? LockedEventIndex { get; set; }
        [JsonProperty("myTeam")]
        public ChampSelectPlayerSelection[]? MyTeam { get; set; }
        [JsonProperty("recoveryCounter")]
        public long? RecoveryCounter { get; set; }
        [JsonProperty("rerollsRemaining")]
        public int? RerollsRemaining { get; set; }
        [JsonProperty("skipChampionSelect")]
        public bool? SkipChampionSelect { get; set; }
        [JsonProperty("theirTeam")]
        public ChampSelectPlayerSelection[]? TheirTeam { get; set; }
        [JsonProperty("timer")]
        public ChampSelectTimer? Timer { get; set; }
        [JsonProperty("trades")]
        public ChampSelectTradeContract[]? Trades { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ChampSelectSession("
                + "Actions: " + Actions + ", "
                + "AllowBattleBoost: " + AllowBattleBoost + ", "
                + "AllowDuplicatePicks: " + AllowDuplicatePicks + ", "
                + "AllowLockedEvents: " + AllowLockedEvents + ", "
                + "AllowRerolling: " + AllowRerolling + ", "
                + "AllowSkinSelection: " + AllowSkinSelection + ", "
                + "Bans: " + Bans + ", "
                + "BenchChampionIds: " + BenchChampionIds + ", "
                + "BenchEnabled: " + BenchEnabled + ", "
                + "BoostableSkinCount: " + BoostableSkinCount + ", "
                + "ChatDetails: " + ChatDetails + ", "
                + "Counter: " + Counter + ", "
                + "EntitledFeatureState: " + EntitledFeatureState + ", "
                + "GameId: " + GameId + ", "
                + "HasSimultaneousBans: " + HasSimultaneousBans + ", "
                + "HasSimultaneousPicks: " + HasSimultaneousPicks + ", "
                + "IsCustomGame: " + IsCustomGame + ", "
                + "IsSpectating: " + IsSpectating + ", "
                + "LocalPlayerCellId: " + LocalPlayerCellId + ", "
                + "LockedEventIndex: " + LockedEventIndex + ", "
                + "MyTeam: " + MyTeam + ", "
                + "RecoveryCounter: " + RecoveryCounter + ", "
                + "RerollsRemaining: " + RerollsRemaining + ", "
                + "SkipChampionSelect: " + SkipChampionSelect + ", "
                + "TheirTeam: " + TheirTeam + ", "
                + "Timer: " + Timer + ", "
                + "Trades: " + Trades + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectAction data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ChampSelectAction
    {

#nullable disable
        public ChampSelectAction() {}
#nullable restore

        [JsonProperty("actorCellId")]
        public long? ActorCellId { get; set; }
        [JsonProperty("championId")]
        public int? ChampionId { get; set; }
        [JsonProperty("completed")]
        public bool? Completed { get; set; }
        [JsonProperty("id")]
        public long? Id { get; set; }
        [JsonProperty("isAllyAction")]
        public bool? IsAllyAction { get; set; }
        [JsonProperty("type")]
        public string? Type { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ChampSelectAction("
                + "ActorCellId: " + ActorCellId + ", "
                + "ChampionId: " + ChampionId + ", "
                + "Completed: " + Completed + ", "
                + "Id: " + Id + ", "
                + "IsAllyAction: " + IsAllyAction + ", "
                + "Type: " + Type + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectMySelection data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ChampSelectMySelection
    {

#nullable disable
        public ChampSelectMySelection() {}
#nullable restore

        [JsonProperty("selectedSkinId")]
        public int? SelectedSkinId { get; set; }
        [JsonProperty("spell1Id")]
        public long? Spell1Id { get; set; }
        [JsonProperty("spell2Id")]
        public long? Spell2Id { get; set; }
        [JsonProperty("wardSkinId")]
        public long? WardSkinId { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ChampSelectMySelection("
                + "SelectedSkinId: " + SelectedSkinId + ", "
                + "Spell1Id: " + Spell1Id + ", "
                + "Spell2Id: " + Spell2Id + ", "
                + "WardSkinId: " + WardSkinId + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectTimer data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ChampSelectTimer
    {

#nullable disable
        public ChampSelectTimer() {}
#nullable restore

        [JsonProperty("adjustedTimeLeftInPhase")]
        public long? AdjustedTimeLeftInPhase { get; set; }
        [JsonProperty("internalNowInEpochMs")]
        public long? InternalNowInEpochMs { get; set; }
        [JsonProperty("isInfinite")]
        public bool? IsInfinite { get; set; }
        [JsonProperty("phase")]
        public string? Phase { get; set; }
        [JsonProperty("totalTimeInPhase")]
        public long? TotalTimeInPhase { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ChampSelectTimer("
                + "AdjustedTimeLeftInPhase: " + AdjustedTimeLeftInPhase + ", "
                + "InternalNowInEpochMs: " + InternalNowInEpochMs + ", "
                + "IsInfinite: " + IsInfinite + ", "
                + "Phase: " + Phase + ", "
                + "TotalTimeInPhase: " + TotalTimeInPhase + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectTradeContract data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ChampSelectTradeContract
    {

#nullable disable
        public ChampSelectTradeContract() {}
#nullable restore

        [JsonProperty("cellId")]
        public long? CellId { get; set; }
        [JsonProperty("id")]
        public long? Id { get; set; }
        [JsonProperty("state")]
        public ChampSelectTradeState? State { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ChampSelectTradeContract("
                + "CellId: " + CellId + ", "
                + "Id: " + Id + ", "
                + "State: " + State + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// TeamBoost data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class TeamBoost
    {

#nullable disable
        public TeamBoost() {}
#nullable restore

        [JsonProperty("availableSkins")]
        public long[]? AvailableSkins { get; set; }
        [JsonProperty("ipReward")]
        public long? IpReward { get; set; }
        [JsonProperty("ipRewardForPurchaser")]
        public long? IpRewardForPurchaser { get; set; }
        [JsonProperty("price")]
        public long? Price { get; set; }
        [JsonProperty("skinUnlockMode")]
        public string? SkinUnlockMode { get; set; }
        [JsonProperty("summonerId")]
        public long? SummonerId { get; set; }
        [JsonProperty("unlocked")]
        public bool? Unlocked { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "TeamBoost("
                + "AvailableSkins: " + AvailableSkins + ", "
                + "IpReward: " + IpReward + ", "
                + "IpRewardForPurchaser: " + IpRewardForPurchaser + ", "
                + "Price: " + Price + ", "
                + "SkinUnlockMode: " + SkinUnlockMode + ", "
                + "SummonerId: " + SummonerId + ", "
                + "Unlocked: " + Unlocked + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectTradeState data object. This class is automatically generated.<para />
    /// 
    /// </summary>
#if USE_SYSTEXTJSON
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
#endif
    public enum ChampSelectTradeState
    {
        AVAILABLE,
        BUSY,
        INVALID,
        RECEIVED,
        SENT,
        DECLINED,
        CANCELLED,
        ACCEPTED
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectBannedChampions data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ChampSelectBannedChampions
    {

#nullable disable
        public ChampSelectBannedChampions() {}
#nullable restore

        [JsonProperty("myTeamBans")]
        public int[]? MyTeamBans { get; set; }
        [JsonProperty("numBans")]
        public int? NumBans { get; set; }
        [JsonProperty("theirTeamBans")]
        public int[]? TheirTeamBans { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ChampSelectBannedChampions("
                + "MyTeamBans: " + MyTeamBans + ", "
                + "NumBans: " + NumBans + ", "
                + "TheirTeamBans: " + TheirTeamBans + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectChatRoomDetails data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ChampSelectChatRoomDetails
    {

#nullable disable
        public ChampSelectChatRoomDetails() {}
#nullable restore

        [JsonProperty("chatRoomName")]
        public string? ChatRoomName { get; set; }
        [JsonProperty("chatRoomPassword")]
        public string? ChatRoomPassword { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ChampSelectChatRoomDetails("
                + "ChatRoomName: " + ChatRoomName + ", "
                + "ChatRoomPassword: " + ChatRoomPassword + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// EntitledFeatureState data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class EntitledFeatureState
    {

#nullable disable
        public EntitledFeatureState() {}
#nullable restore

        [JsonProperty("additionalRerolls")]
        public int? AdditionalRerolls { get; set; }
        [JsonProperty("unlockedSkinIds")]
        public int[]? UnlockedSkinIds { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "EntitledFeatureState("
                + "AdditionalRerolls: " + AdditionalRerolls + ", "
                + "UnlockedSkinIds: " + UnlockedSkinIds + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolChampSelect
{
    /// <summary>
    /// ChampSelectPlayerSelection data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class ChampSelectPlayerSelection
    {

#nullable disable
        public ChampSelectPlayerSelection() {}
#nullable restore

        [JsonProperty("assignedPosition")]
        public string? AssignedPosition { get; set; }
        [JsonProperty("cellId")]
        public long? CellId { get; set; }
        [JsonProperty("championId")]
        public int? ChampionId { get; set; }
        [JsonProperty("championPickIntent")]
        public int? ChampionPickIntent { get; set; }
        [JsonProperty("entitledFeatureType")]
        public string? EntitledFeatureType { get; set; }
        [JsonProperty("selectedSkinId")]
        public int? SelectedSkinId { get; set; }
        [JsonProperty("spell1Id")]
        public long? Spell1Id { get; set; }
        [JsonProperty("spell2Id")]
        public long? Spell2Id { get; set; }
        [JsonProperty("summonerId")]
        public long? SummonerId { get; set; }
        [JsonProperty("team")]
        public int? Team { get; set; }
        [JsonProperty("wardSkinId")]
        public long? WardSkinId { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "ChampSelectPlayerSelection("
                + "AssignedPosition: " + AssignedPosition + ", "
                + "CellId: " + CellId + ", "
                + "ChampionId: " + ChampionId + ", "
                + "ChampionPickIntent: " + ChampionPickIntent + ", "
                + "EntitledFeatureType: " + EntitledFeatureType + ", "
                + "SelectedSkinId: " + SelectedSkinId + ", "
                + "Spell1Id: " + Spell1Id + ", "
                + "Spell2Id: " + Spell2Id + ", "
                + "SummonerId: " + SummonerId + ", "
                + "Team: " + Team + ", "
                + "WardSkinId: " + WardSkinId + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// AchievedTier data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class AchievedTier
    {

#nullable disable
        public AchievedTier() {}
#nullable restore

        [JsonProperty("division")]
        public long? Division { get; set; }
        [JsonProperty("queueType")]
        public Camille.Enums.QueueType? QueueType { get; set; }
        [JsonProperty("tier")]
        public Camille.Enums.Tier? Tier { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "AchievedTier("
                + "Division: " + Division + ", "
                + "QueueType: " + QueueType + ", "
                + "Tier: " + Tier + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// RankedQueueStats data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class RankedQueueStats
    {

#nullable disable
        public RankedQueueStats() {}
#nullable restore

        [JsonProperty("division")]
        public Camille.Enums.Division? Division { get; set; }
        [JsonProperty("isProvisional")]
        public bool? IsProvisional { get; set; }
        [JsonProperty("leaguePoints")]
        public int? LeaguePoints { get; set; }
        [JsonProperty("losses")]
        public int? Losses { get; set; }
        [JsonProperty("miniSeriesProgress")]
        public string? MiniSeriesProgress { get; set; }
        [JsonProperty("previousSeasonAchievedDivision")]
        public Camille.Enums.Division? PreviousSeasonAchievedDivision { get; set; }
        [JsonProperty("previousSeasonAchievedTier")]
        public Camille.Enums.Tier? PreviousSeasonAchievedTier { get; set; }
        [JsonProperty("previousSeasonEndDivision")]
        public Camille.Enums.Division? PreviousSeasonEndDivision { get; set; }
        [JsonProperty("previousSeasonEndTier")]
        public Camille.Enums.Tier? PreviousSeasonEndTier { get; set; }
        [JsonProperty("provisionalGamesRemaining")]
        public int? ProvisionalGamesRemaining { get; set; }
        [JsonProperty("provisionalGameThreshold")]
        public int? ProvisionalGameThreshold { get; set; }
        [JsonProperty("queueType")]
        public Camille.Enums.QueueType? QueueType { get; set; }
        [JsonProperty("ratedRating")]
        public int? RatedRating { get; set; }
        [JsonProperty("ratedTier")]
        public RatedTier? RatedTier { get; set; }
        [JsonProperty("tier")]
        public Camille.Enums.Tier? Tier { get; set; }
        [JsonProperty("warnings")]
        public RankedQueueWarnings? Warnings { get; set; }
        [JsonProperty("wins")]
        public int? Wins { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "RankedQueueStats("
                + "Division: " + Division + ", "
                + "IsProvisional: " + IsProvisional + ", "
                + "LeaguePoints: " + LeaguePoints + ", "
                + "Losses: " + Losses + ", "
                + "MiniSeriesProgress: " + MiniSeriesProgress + ", "
                + "PreviousSeasonAchievedDivision: " + PreviousSeasonAchievedDivision + ", "
                + "PreviousSeasonAchievedTier: " + PreviousSeasonAchievedTier + ", "
                + "PreviousSeasonEndDivision: " + PreviousSeasonEndDivision + ", "
                + "PreviousSeasonEndTier: " + PreviousSeasonEndTier + ", "
                + "ProvisionalGameThreshold: " + ProvisionalGameThreshold + ", "
                + "ProvisionalGamesRemaining: " + ProvisionalGamesRemaining + ", "
                + "QueueType: " + QueueType + ", "
                + "RatedRating: " + RatedRating + ", "
                + "RatedTier: " + RatedTier + ", "
                + "Tier: " + Tier + ", "
                + "Warnings: " + Warnings + ", "
                + "Wins: " + Wins + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// Season data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class Season
    {

#nullable disable
        public Season() {}
#nullable restore

        [JsonProperty("currentSeasonEnd")]
        public long? CurrentSeasonEnd { get; set; }
        [JsonProperty("currentSeasonId")]
        public int? CurrentSeasonId { get; set; }
        [JsonProperty("nextSeasonStart")]
        public long? NextSeasonStart { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "Season("
                + "CurrentSeasonEnd: " + CurrentSeasonEnd + ", "
                + "CurrentSeasonId: " + CurrentSeasonId + ", "
                + "NextSeasonStart: " + NextSeasonStart + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// RatedTier data object. This class is automatically generated.<para />
    /// 
    /// </summary>
#if USE_SYSTEXTJSON
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
#endif
    public enum RatedTier
    {
        NONE,
        GRAY,
        GREEN,
        BLUE,
        PURPLE,
        ORANGE
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// RankedQueueWarnings data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class RankedQueueWarnings
    {

#nullable disable
        public RankedQueueWarnings() {}
#nullable restore

        [JsonProperty("daysUntilDecay")]
        public int? DaysUntilDecay { get; set; }
        [JsonProperty("demotionWarning")]
        public int? DemotionWarning { get; set; }
        [JsonProperty("displayDecayWarning")]
        public bool? DisplayDecayWarning { get; set; }
        [JsonProperty("timeUntilInactivityStatusChanges")]
        public long? TimeUntilInactivityStatusChanges { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "RankedQueueWarnings("
                + "DaysUntilDecay: " + DaysUntilDecay + ", "
                + "DemotionWarning: " + DemotionWarning + ", "
                + "DisplayDecayWarning: " + DisplayDecayWarning + ", "
                + "TimeUntilInactivityStatusChanges: " + TimeUntilInactivityStatusChanges + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// LeagueDivisionInfo data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class LeagueDivisionInfo
    {

#nullable disable
        public LeagueDivisionInfo() {}
#nullable restore

        [JsonProperty("apexUnlockTimeMillis")]
        public long? ApexUnlockTimeMillis { get; set; }
        [JsonProperty("division")]
        public Camille.Enums.Division? Division { get; set; }
        [JsonProperty("maxLeagueSize")]
        public int? MaxLeagueSize { get; set; }
        [JsonProperty("minLpForApexTier")]
        public int? MinLpForApexTier { get; set; }
        [JsonProperty("standings")]
        public LeagueStanding[]? Standings { get; set; }
        [JsonProperty("tier")]
        public Camille.Enums.Tier? Tier { get; set; }
        [JsonProperty("topNumberOfPlayers")]
        public long? TopNumberOfPlayers { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "LeagueDivisionInfo("
                + "ApexUnlockTimeMillis: " + ApexUnlockTimeMillis + ", "
                + "Division: " + Division + ", "
                + "MaxLeagueSize: " + MaxLeagueSize + ", "
                + "MinLpForApexTier: " + MinLpForApexTier + ", "
                + "Standings: " + Standings + ", "
                + "Tier: " + Tier + ", "
                + "TopNumberOfPlayers: " + TopNumberOfPlayers + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// LeagueStanding data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class LeagueStanding
    {

#nullable disable
        public LeagueStanding() {}
#nullable restore

        [JsonProperty("division")]
        public Camille.Enums.Division? Division { get; set; }
        [JsonProperty("earnedRegaliaRewardIds")]
        public string[]? EarnedRegaliaRewardIds { get; set; }
        [JsonProperty("isProvisional")]
        public bool? IsProvisional { get; set; }
        [JsonProperty("leaguePoints")]
        public long? LeaguePoints { get; set; }
        [JsonProperty("losses")]
        public long? Losses { get; set; }
        [JsonProperty("miniseriesResults")]
        public Miniseries[]? MiniseriesResults { get; set; }
        [JsonProperty("pendingDemotion")]
        public bool? PendingDemotion { get; set; }
        [JsonProperty("pendingPromotion")]
        public bool? PendingPromotion { get; set; }
        [JsonProperty("position")]
        public int? Position { get; set; }
        [JsonProperty("positionDelta")]
        public int? PositionDelta { get; set; }
        [JsonProperty("previousPosition")]
        public int? PreviousPosition { get; set; }
        [JsonProperty("previousSeasonAchievedDivision")]
        public Camille.Enums.Division? PreviousSeasonAchievedDivision { get; set; }
        [JsonProperty("previousSeasonAchievedTier")]
        public Camille.Enums.Tier? PreviousSeasonAchievedTier { get; set; }
        [JsonProperty("provisionalGamesRemaining")]
        public int? ProvisionalGamesRemaining { get; set; }
        [JsonProperty("puuid")]
        public string? Puuid { get; set; }
        [JsonProperty("rankedRegaliaLevel")]
        public int? RankedRegaliaLevel { get; set; }
        [JsonProperty("summonerId")]
        public long? SummonerId { get; set; }
        [JsonProperty("summonerName")]
        public string? SummonerName { get; set; }
        [JsonProperty("tier")]
        public Camille.Enums.Tier? Tier { get; set; }
        [JsonProperty("wins")]
        public long? Wins { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "LeagueStanding("
                + "Division: " + Division + ", "
                + "EarnedRegaliaRewardIds: " + EarnedRegaliaRewardIds + ", "
                + "IsProvisional: " + IsProvisional + ", "
                + "LeaguePoints: " + LeaguePoints + ", "
                + "Losses: " + Losses + ", "
                + "MiniseriesResults: " + MiniseriesResults + ", "
                + "PendingDemotion: " + PendingDemotion + ", "
                + "PendingPromotion: " + PendingPromotion + ", "
                + "Position: " + Position + ", "
                + "PositionDelta: " + PositionDelta + ", "
                + "PreviousPosition: " + PreviousPosition + ", "
                + "PreviousSeasonAchievedDivision: " + PreviousSeasonAchievedDivision + ", "
                + "PreviousSeasonAchievedTier: " + PreviousSeasonAchievedTier + ", "
                + "ProvisionalGamesRemaining: " + ProvisionalGamesRemaining + ", "
                + "Puuid: " + Puuid + ", "
                + "RankedRegaliaLevel: " + RankedRegaliaLevel + ", "
                + "SummonerId: " + SummonerId + ", "
                + "SummonerName: " + SummonerName + ", "
                + "Tier: " + Tier + ", "
                + "Wins: " + Wins + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolRanked
{
    /// <summary>
    /// Miniseries data object. This class is automatically generated.<para />
    /// 
    /// </summary>
#if USE_SYSTEXTJSON
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
#endif
    public enum Miniseries
    {
        W,
        L,
        N
    }
}

namespace Camille.Lcu.LolLogin
{
    /// <summary>
    /// LoginError data object. This class is automatically generated.<para />
    /// 
    /// </summary>
    public class LoginError
    {

#nullable disable
        public LoginError() {}
#nullable restore

        [JsonProperty("description")]
        public string? Description { get; set; }
        [JsonProperty("id")]
        public string? Id { get; set; }
        [JsonProperty("messageId")]
        public string? MessageId { get; set; }

        /// <summary>Contains any extra JSON properties that did not map to fields.</summary>
        [JsonExtensionData]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles")]
        public Dictionary<string, object> _AdditionalProperties { get; set; } = new Dictionary<string, object>();

        public override string ToString()
        {
            return "LoginError("
                + "Description: " + Description + ", "
                + "Id: " + Id + ", "
                + "MessageId: " + MessageId + ", "
                + "_AdditionalProperties: {" + string.Join(", ", _AdditionalProperties.Select(kv => $"\"{kv.Key}\": {kv.Value}")) + "})";
        }
    }
}

namespace Camille.Lcu.LolLogin
{
    /// <summary>
    /// LoginSessionStates data object. This class is automatically generated.<para />
    /// 
    /// </summary>
#if USE_SYSTEXTJSON
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
#endif
    public enum LoginSessionStates
    {
        IN_PROGRESS,
        SUCCEEDED,
        LOGGING_OUT,
        ERROR
    }
}


